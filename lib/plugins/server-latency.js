// Generated by CoffeeScript 1.6.1

/*
Usage:
  In your assembot conf (coffeescript example):

  options:
    http:
      log: no
      latency:
        enabled: yes
        max: 1000
        rules:
          ".(jpg|png|jpeg)": 100
*/


(function() {

  module.exports = function(assembot) {
    var log;
    log = assembot.log;
    log.info("Server Latency Plugin...");
    return assembot.on('create:server', function(server, opts) {
      var maxAge, test, tests, time, _ref, _ref1, _ref2;
      if (opts == null) {
        opts = {};
      }
      if ((_ref = opts.http) == null) {
        opts.http = {};
      }
      if ((opts.http.latency != null) && opts.http.latency.enabled) {
        log.info("Activating latency simulator");
        maxAge = (_ref1 = opts.http.latency.max) != null ? _ref1 : 3000;
        tests = [];
        _ref2 = opts.http.latency.rules;
        for (test in _ref2) {
          time = _ref2[test];
          log.info(" - compiling latency test", test);
          tests.push({
            matcher: new RegExp(test),
            time: time,
            prev: 0
          });
        }
        return server.use(function(req, res, next) {
          var waitFor, _i, _len;
          for (_i = 0, _len = tests.length; _i < _len; _i++) {
            test = tests[_i];
            if (test.matcher.test(req.url)) {
              waitFor = test.time < 0 ? test.prev + (-test.time) : test.time;
              test.prev = waitFor;
              if (waitFor >= maxAge) {
                waitFor = maxAge;
                test.prev = 0;
              }
              log.info("Waiting....", waitFor, req.url);
              setTimeout(next, waitFor);
              return;
            }
          }
          return next();
        });
      }
    });
  };

}).call(this);
