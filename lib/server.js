// Generated by CoffeeScript 1.5.0
(function() {
  var builder, express, fs, getConfigFor, inspect, path, print, puts, _, _ref;

  express = require('express');

  fs = require('fs');

  path = require('path');

  builder = require('./builder');

  _ = require('./util');

  _ref = require('./util'), puts = _ref.puts, print = _ref.print, inspect = _ref.inspect;

  getConfigFor = function(path, info) {
    var config, output;
    for (output in info) {
      config = info[output];
      if (config.text !== 'meta') {
        if (config.output.path === path) {
          return config;
        }
      }
    }
  };

  exports.serve = function(config, opts) {
    var app, port, project_root, root, targets;
    if (opts == null) {
      opts = {};
    }
    puts("Setting up dev server...");
    targets = builder.buildTargets(config, true);
    app = express();
    port = config.port || opts.port || 8080;
    project_root = process.cwd();
    root = path.resolve(config.wwwRoot || ("" + project_root + "/public"));
    puts("  root: " + root);
    puts("  port: " + port);
    app.get('/*', function(req, res) {
      var conf, localpath, uri;
      uri = req.params[0] || 'index.html';
      localpath = path.join(root, uri);
      if (targets.indexOf(localpath) >= 0) {
        conf = getConfigFor(localpath, config);
        return builder.buildTarget(conf, function(err, content) {
          if (err != null) {
            return res.send(500, String(err));
          } else {
            return res.send(200, content);
          }
        });
      } else {
        if (fs.existsSync(localpath)) {
          return res.sendfile(localpath);
        } else {
          return res.send(404, "Not Found");
        }
      }
    });
    app.use(express.errorHandler({
      dumpExceptions: true,
      showStack: true
    }));
    app.listen(port);
    return puts(" Ready! Visit http://127.0.0.1:" + port);
  };

  /*
  var express = require("express"),
      app     = express(),
      port    = parseInt(process.env.PORT, 10) || 4567;
      
  app.get("/", function(req, res) {
    res.redirect("/index.html");
  });
  
  app.configure(function(){
    app.use(express.methodOverride());
    app.use(express.bodyParser());
    app.use(express.static(__dirname + '/public'));
    app.use(express.errorHandler({
      dumpExceptions: true, 
      showStack: true
    }));
    app.use(app.router);
  });
  
  app.listen(port);
  */


}).call(this);
